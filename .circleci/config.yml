version: 2.1
commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}


jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1  

  get_server_publicip:
    docker:
    - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install dependency
          command: |
            yum install gzip tar -y
      - run:
          name: Get Created Instance IP
          command: |
            aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --filters "Name=tag:Project,Values=udacity" --output text > ~/out.txt
      # - save_cache:
      #       keys: 
      #         - inventory-{{ checksum "ip.txt" }
      - persist_to_workspace:
          root: ~/
          paths:
            - out.txt

      - run: cat ~/out.txt      
      - run:
            name: Delete Cloudformation Stack
            command: |
              aws cloudformation delete-stack \
                --stack-name myStack \
                --region us-east-1   
            when: on_fail    

  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
              fingerprints: ["dd:f6:9d:23:7a:5e:ac:25:58:31:a5:17:e0:0c:ef:4f"] 
      # - restore_cache:
      #     keys: inventory-{{ checksum "ip.txt" }
      - attach_workspace:
          at: ~/
      - run:
         name: Import IP to Inventory
         command: echo "[all]" > inventory 
      - run: cat ~/out.txt >> inventory
      - run: cat inventory
      - run:
          name: Install Ansible 
          command: |
             apk add --update ansible 


      - run:
          name: Run Ansible Playbook 
          command: |
             ansible-playbook main-remote.yml -i inventory --private-key udacity.pem



  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
      - destroy_environment


# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
      - get_server_publicip:
          requires:
            - create_infrastructure        
      - configure_infrastructure:
          requires:
          - get_server_publicip
      - smoke_test:
          requires:
           - get_server_publicip
   
      
    
 

